import slash
from testbeds.hil_testbed import *

import cantools
from can.interfaces.socketcan.socketcan import SocketcanBus

from drivers.common_drivers.can_driver import CANListener
from drivers.dtc_logger import DTCLogger

@slash.plugins.active
class ParamsPlugin(slash.plugins.PluginInterface):
    def get_name(self):
        return "Param Parsing Algorithm"

    def configure_argument_parser(self, parser):
        parser.add_argument('-t', '--testbed', help='testbed to use')

    def configure_from_parsed_args(self, args):
        self.testbed_name = args.testbed
        if self.testbed_name is None:
            self.testbed_name = "VehicleHIL"

    def session_start(self):
        # TODO: Maybe move this to .slashrc as an arg
        slash.g.vehicle_db = cantools.db.load_file("../common/Data/2018CAR.dbc")
        slash.g.hil_db = cantools.db.load_file("HIL_Firmware/common/data/HIL.dbc")

        slash.g.vehicle_bus: SocketcanBus = NotImplemented
        slash.g.hil_bus: SocketcanBus = NotImplemented
        
        slash.g.vehicle_dtc_logger = DTCLogger(slash.g.vehicle_db)
        
        slash.g.vehicle_listener = NotImplemented
        slash.g.hil_listener = NotImplemented

        slash.g.testbed = globals()[self.testbed_name]()
